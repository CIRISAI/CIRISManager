[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ciris-manager"
version = "2.1.2"
description = "CIRIS Container Manager - Lightweight systemd service for agent lifecycle"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "CIRIS AI", email = "team@ciris.ai"}
]
keywords = ["ciris", "agent", "manager", "docker", "lifecycle"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "pyyaml>=6.0",
    "aiofiles>=23.0",
    "docker>=6.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0",
    "httpx>=0.24.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "PyJWT>=2.8.0",
    "PyNaCl>=1.5.0",
    "requests>=2.31.0",
    "tabulate>=0.9.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "mypy>=1.0",
    "ruff==0.7.0",
    "types-PyYAML>=6.0",
    "types-docker>=7.0",
    "types-requests>=2.31.0",
    "types-python-dateutil>=2.8.0",
]

[project.scripts]
ciris-manager = "ciris_manager.daemon:main"
ciris-manager-client = "ciris_manager_client.main:main"

[project.urls]
Homepage = "https://github.com/CIRISAI/CIRISManager"
Documentation = "https://github.com/CIRISAI/CIRISManager/wiki"
Repository = "https://github.com/CIRISAI/CIRISManager"
Issues = "https://github.com/CIRISAI/CIRISManager/issues"

[tool.setuptools.packages.find]
include = ["ciris_manager*", "ciris_manager_sdk*", "ciris_manager_client*"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["g.py", "tools/grace/"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"
