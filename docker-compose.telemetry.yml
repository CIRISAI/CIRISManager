version: '3.8'

services:
  timescaledb:
    build:
      context: ./docker/telemetry
      dockerfile: Dockerfile
    container_name: ciris-timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${TELEMETRY_DB_USER:-ciris}
      POSTGRES_PASSWORD: ${TELEMETRY_DB_PASSWORD:-changeme}
      POSTGRES_DB: ${TELEMETRY_DB_NAME:-telemetry}
    ports:
      - "${TELEMETRY_DB_PORT:-5432}:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./migrations/telemetry:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TELEMETRY_DB_USER:-ciris} -d ${TELEMETRY_DB_NAME:-telemetry}"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - telemetry

  grafana:
    image: grafana/grafana:latest
    container_name: ciris-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/telemetry/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./docker/telemetry/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - timescaledb
    networks:
      - telemetry

  prometheus:
    image: prom/prometheus:latest
    container_name: ciris-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./docker/telemetry/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - telemetry

volumes:
  timescaledb_data:
  grafana_data:
  prometheus_data:

networks:
  telemetry:
    driver: bridge